/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { InputType } from "./components/ws-input/ws-input";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface WsButton {
        /**
          * value
         */
        "value": string;
    }
    interface WsCheckbox {
        /**
          * value
         */
        "value": string;
    }
    interface WsInput {
        "label": string;
        "name": string;
        "type": InputType;
        /**
          * value
         */
        "value": string;
    }
    interface WsLabel {
        /**
          * value
         */
        "value": string;
    }
    interface WsRadiobutton {
        "label": string;
        "name": string;
        "options": string[];
        /**
          * value
         */
        "value": string;
    }
    interface WsSelect {
        "name": string;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLWsButtonElement extends Components.WsButton, HTMLStencilElement {
    }
    var HTMLWsButtonElement: {
        prototype: HTMLWsButtonElement;
        new (): HTMLWsButtonElement;
    };
    interface HTMLWsCheckboxElement extends Components.WsCheckbox, HTMLStencilElement {
    }
    var HTMLWsCheckboxElement: {
        prototype: HTMLWsCheckboxElement;
        new (): HTMLWsCheckboxElement;
    };
    interface HTMLWsInputElement extends Components.WsInput, HTMLStencilElement {
    }
    var HTMLWsInputElement: {
        prototype: HTMLWsInputElement;
        new (): HTMLWsInputElement;
    };
    interface HTMLWsLabelElement extends Components.WsLabel, HTMLStencilElement {
    }
    var HTMLWsLabelElement: {
        prototype: HTMLWsLabelElement;
        new (): HTMLWsLabelElement;
    };
    interface HTMLWsRadiobuttonElement extends Components.WsRadiobutton, HTMLStencilElement {
    }
    var HTMLWsRadiobuttonElement: {
        prototype: HTMLWsRadiobuttonElement;
        new (): HTMLWsRadiobuttonElement;
    };
    interface HTMLWsSelectElement extends Components.WsSelect, HTMLStencilElement {
    }
    var HTMLWsSelectElement: {
        prototype: HTMLWsSelectElement;
        new (): HTMLWsSelectElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "ws-button": HTMLWsButtonElement;
        "ws-checkbox": HTMLWsCheckboxElement;
        "ws-input": HTMLWsInputElement;
        "ws-label": HTMLWsLabelElement;
        "ws-radiobutton": HTMLWsRadiobuttonElement;
        "ws-select": HTMLWsSelectElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface WsButton {
        /**
          * value
         */
        "value"?: string;
    }
    interface WsCheckbox {
        /**
          * value
         */
        "value"?: string;
    }
    interface WsInput {
        "label"?: string;
        "name"?: string;
        "type"?: InputType;
        /**
          * value
         */
        "value"?: string;
    }
    interface WsLabel {
        /**
          * value
         */
        "value"?: string;
    }
    interface WsRadiobutton {
        "label"?: string;
        "name"?: string;
        "options"?: string[];
        /**
          * value
         */
        "value"?: string;
    }
    interface WsSelect {
        "name"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "ws-button": WsButton;
        "ws-checkbox": WsCheckbox;
        "ws-input": WsInput;
        "ws-label": WsLabel;
        "ws-radiobutton": WsRadiobutton;
        "ws-select": WsSelect;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "ws-button": LocalJSX.WsButton & JSXBase.HTMLAttributes<HTMLWsButtonElement>;
            "ws-checkbox": LocalJSX.WsCheckbox & JSXBase.HTMLAttributes<HTMLWsCheckboxElement>;
            "ws-input": LocalJSX.WsInput & JSXBase.HTMLAttributes<HTMLWsInputElement>;
            "ws-label": LocalJSX.WsLabel & JSXBase.HTMLAttributes<HTMLWsLabelElement>;
            "ws-radiobutton": LocalJSX.WsRadiobutton & JSXBase.HTMLAttributes<HTMLWsRadiobuttonElement>;
            "ws-select": LocalJSX.WsSelect & JSXBase.HTMLAttributes<HTMLWsSelectElement>;
        }
    }
}
